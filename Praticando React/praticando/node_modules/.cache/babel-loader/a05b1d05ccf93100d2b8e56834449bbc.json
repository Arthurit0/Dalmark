{"ast":null,"code":"var _jsxFileName = \"/home/arthur/\\xC1rea de Trabalho/GitHub/Estagio-Dalmark/Pr\\xE1tica 5 - Formulario em React/form_v2/src/components/DropdownCidades.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { fetchCidadeDoEstado } from \"../helpers/ibge\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropdownCidades = _ref => {\n  _s();\n\n  let {\n    state,\n    onChange = () => {},\n    onLoad = () => {},\n    selected = () => {},\n    className = () => {}\n  } = _ref;\n  const [cidades, setCidades] = useState([]);\n  useEffect(() => {\n    fetchCidadeDoEstado(state).then(cidades => {\n      setCidades(cidades);\n    });\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    className: className,\n    name: \"selectbox-city\",\n    id: \"estado\",\n    onChange: onChange,\n    onLoad: onLoad,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"empty-city\",\n      id: \"empty-city\",\n      children: \"Selecione uma Cidade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), cidades.map(cidade => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cidade.nome,\n        selected: cidade.nome === selected,\n        children: cidade.nome\n      }, cidade.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropdownCidades, \"9xtiFyrgu/lfxFYusTpbR3geFf0=\");\n\n_c = DropdownCidades;\nexport default DropdownCidades;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownCidades\");","map":{"version":3,"sources":["/home/arthur/Área de Trabalho/GitHub/Estagio-Dalmark/Prática 5 - Formulario em React/form_v2/src/components/DropdownCidades.js"],"names":["useEffect","useState","fetchCidadeDoEstado","DropdownCidades","state","onChange","onLoad","selected","className","cidades","setCidades","then","map","cidade","nome","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,mBAAT,QAAoC,iBAApC;;;AAEA,MAAMC,eAAe,GAAG,QAMlB;AAAA;;AAAA,MANmB;AACvBC,IAAAA,KADuB;AAEvBC,IAAAA,QAAQ,GAAG,MAAM,CAAE,CAFI;AAGvBC,IAAAA,MAAM,GAAG,MAAM,CAAE,CAHM;AAIvBC,IAAAA,QAAQ,GAAG,MAAM,CAAE,CAJI;AAKvBC,IAAAA,SAAS,GAAG,MAAM,CAAE;AALG,GAMnB;AACJ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,mBAAmB,CAACE,KAAD,CAAnB,CAA2BO,IAA3B,CAAiCF,OAAD,IAAa;AAC3CC,MAAAA,UAAU,CAACD,OAAD,CAAV;AACD,KAFD;AAGD,GAJQ,EAIN,CAACL,KAAD,CAJM,CAAT;AAMA,sBACE;AACE,IAAA,SAAS,EAAEI,SADb;AAEE,IAAA,IAAI,EAAC,gBAFP;AAGE,IAAA,EAAE,EAAC,QAHL;AAIE,IAAA,QAAQ,EAAEH,QAJZ;AAKE,IAAA,MAAM,EAAEC,MALV;AAAA,4BAOE;AAAQ,MAAA,KAAK,EAAC,YAAd;AAA2B,MAAA,EAAE,EAAC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,EAUGG,OAAO,CAACG,GAAR,CAAaC,MAAD,IAAY;AACvB,0BACE;AAEE,QAAA,KAAK,EAAEA,MAAM,CAACC,IAFhB;AAGE,QAAA,QAAQ,EAAED,MAAM,CAACC,IAAP,KAAgBP,QAH5B;AAAA,kBAKGM,MAAM,CAACC;AALV,SACOD,MAAM,CAACE,EADd;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVA,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAvCD;;GAAMZ,e;;KAAAA,e;AAyCN,eAAeA,eAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { fetchCidadeDoEstado } from \"../helpers/ibge\";\n\nconst DropdownCidades = ({\n  state,\n  onChange = () => {},\n  onLoad = () => {},\n  selected = () => {},\n  className = () => {},\n}) => {\n  const [cidades, setCidades] = useState([]);\n\n  useEffect(() => {\n    fetchCidadeDoEstado(state).then((cidades) => {\n      setCidades(cidades);\n    });\n  }, [state]);\n\n  return (\n    <select\n      className={className}\n      name=\"selectbox-city\"\n      id=\"estado\"\n      onChange={onChange}\n      onLoad={onLoad}\n    >\n      <option value=\"empty-city\" id=\"empty-city\">\n        Selecione uma Cidade\n      </option>\n      {cidades.map((cidade) => {\n        return (\n          <option\n            key={cidade.id}\n            value={cidade.nome}\n            selected={cidade.nome === selected}\n          >\n            {cidade.nome}\n          </option>\n        );\n      })}\n    </select>\n  );\n};\n\nexport default DropdownCidades;\n"]},"metadata":{},"sourceType":"module"}