{"ast":null,"code":"var _jsxFileName = \"/home/arthur/\\xC1rea de Trabalho/GitHub/Estagio-Dalmark/Pr\\xE1tica 5 - Formulario em React/form_v2/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Table.css\";\nimport DropdownEstados from \"./DropdownEstados\";\nimport DropdownCidades from \"./DropdownCidades\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Table() {\n  _s();\n\n  const formData = JSON.parse(localStorage.getItem(\"Form-Data\")) || [];\n  const [usuarios] = useState(formData);\n  const [editNome, setEditNome] = useState(\"\");\n  const [editEmail, setEditEmail] = useState(\"\");\n  const [editDataNasc, setEditDataNasc] = useState(\"\");\n  const [editEstado, setEditEstado] = useState(\"\");\n  const [editCidade, setEditCidade] = useState(\"\");\n  const [editSexo, setEditSexo] = useState(\"\");\n  const [editAtivo, setEditAtivo] = useState(\"Inativo\");\n  const [estadoValues, setEstadoValues] = useState({});\n  const [editUserId, setEditUserId] = useState(null);\n\n  const handleInputChange = evt => {\n    evt.preventDefault();\n    const {\n      value,\n      name\n    } = evt.target;\n    setEstadoValues({ ...estadoValues,\n      [name]: value\n    });\n    setEditEstado(evt.target.value);\n  };\n\n  const handleEditClick = (evt, user) => {\n    evt.preventDefault();\n    setEditUserId(user.id);\n  };\n\n  const collectCidade = evt => {\n    setEditCidade(evt.target.value);\n  };\n\n  function changeAtivoState() {\n    if (editAtivo === \"Inativo\") {\n      setEditAtivo(\"Ativo\");\n    } else {\n      setEditAtivo(\"Inativo\");\n    }\n  }\n\n  function validateValues() {\n    if (editNome === \"\" || editEmail === \"\" || editDataNasc === \"\" || editEstado === \"\" || editCidade === \"\" || editSexo === \"\") {\n      alert(\"Erro: Todos os campos devem ser preenchidos!\");\n      return false;\n    }\n\n    return true;\n  }\n\n  function validateChange(index) {\n    const data = formData[index];\n\n    if (data.nome === editNome && data.email === editEmail && data.dataNasc === editDataNasc && data.cidade === editCidade && data.estado === editEstado && data.sexo === editSexo && data.ativo === editAtivo) {\n      alert(\"Nenhuma alteração realizada!\");\n      return false;\n    }\n\n    return true;\n  }\n\n  function setEditStates(user) {\n    setEditNome(user.nome);\n    setEditEmail(user.email);\n    setEditDataNasc(user.dataNasc);\n    setEditEstado(user.estado);\n    setEditCidade(user.cidade);\n    setEditSexo(user.sexo);\n    setEditAtivo(user.ativo);\n    setEstadoValues(editEstado);\n  }\n\n  function populateTable(user) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.nome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.dataNasc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.estado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.cidade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.sexo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: user.ativo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-button\",\n          type: \"button\",\n          id: \"edit\" + user.id,\n          value: \"Editar\",\n          onClick: evt => {\n            setEditStates(user);\n            handleEditClick(evt, user);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"delete-button\",\n          type: \"button\",\n          id: \"delete\" + user.id,\n          value: \"Deletar\",\n          onClick: i => removeRow(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n  function editTable(user) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-name\",\n          type: \"text\",\n          required: \"required\",\n          placeholder: \"Digite um nome...\",\n          name: \"nome\",\n          value: editNome,\n          onChange: evt => setEditNome(evt.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-email\",\n          type: \"text\",\n          required: \"required\",\n          placeholder: \"Digite um Email...\",\n          name: \"email\",\n          value: editEmail,\n          onChange: evt => {\n            setEditEmail(evt.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"edit-date\",\n          type: \"date\",\n          required: \"required\",\n          name: \"data\",\n          value: editDataNasc,\n          onChange: evt => {\n            setEditDataNasc(evt.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(DropdownEstados, {\n          onChange: handleInputChange,\n          onLoad: handleInputChange(editEstado),\n          selected: editEstado,\n          className: \"edit-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(DropdownCidades, {\n          state: estadoValues.state,\n          onChange: collectCidade,\n          selected: editCidade,\n          className: \"edit-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-sexo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"horizontal-radio\",\n              type: \"radio\",\n              id: \"masc\",\n              name: \"sexo\",\n              value: \"Masculino\",\n              checked: editSexo === \"Masculino\",\n              onChange: evt => {\n                setEditSexo(evt.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Masc.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"horizontal-radio\",\n              type: \"radio\",\n              id: \"fem\",\n              name: \"sexo\",\n              value: \"Feminino\",\n              checked: editSexo === \"Feminino\",\n              onChange: evt => {\n                setEditSexo(evt.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Femi.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"horizontal-checkbox\",\n          type: \"checkbox\",\n          id: \"active\",\n          checked: editAtivo === \"Ativo\",\n          onChange: changeAtivoState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"confirm-button\",\n          type: \"button\",\n          id: \"confirm\" + user.id,\n          value: \"Confirmar\",\n          onClick: () => {\n            editData();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"cancel-button\",\n          type: \"button\",\n          id: \"cancel\" + user.id,\n          value: \"Cancelar\",\n          onClick: () => {\n            setEditUserId(\"null\");\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, \"edit \" + user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n  function editData() {\n    var index = editUserId - 1;\n\n    if (validateValues() & validateChange(index)) {\n      const confirmation = window.confirm(\"Você tem certeza que deseja aplicar estas alterações ao usuário?\");\n\n      if (confirmation) {\n        formData[index] = {\n          id: editUserId,\n          nome: editNome,\n          email: editEmail,\n          dataNasc: editDataNasc,\n          estado: editEstado,\n          cidade: editCidade,\n          sexo: editSexo,\n          ativo: editAtivo\n        };\n        formData.splice(index, 1, formData[index]);\n        localStorage.setItem(\"Form-Data\", JSON.stringify(formData));\n        window.location.reload(false);\n      }\n    }\n\n    setEditUserId(\"null\");\n  }\n\n  function removeRow(index) {\n    const formData = JSON.parse(localStorage.getItem(\"Form-Data\")) || [];\n    const confirmation = window.confirm(\"Você tem certeza que deseja excluir este usuário?\");\n\n    if (confirmation) {\n      formData.splice(index, 1);\n      localStorage.setItem(\"Form-Data\", JSON.stringify(formData));\n      window.location.reload();\n    } else {\n      return false;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"div-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tabela em React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-container\",\n        id: \"table-exercicio\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data de Nasc.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Estado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sexo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ativo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"A\\xE7\\xF5es\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          id: \"table-body\",\n          children: usuarios.map((user, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: editUserId === user.id ? editTable(user) : populateTable(user, i)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"uR0Pjn+NSKF4qjFWHe9qzEwM+Uw=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/arthur/Área de Trabalho/GitHub/Estagio-Dalmark/Prática 5 - Formulario em React/form_v2/src/components/Table.js"],"names":["React","useState","DropdownEstados","DropdownCidades","Table","formData","JSON","parse","localStorage","getItem","usuarios","editNome","setEditNome","editEmail","setEditEmail","editDataNasc","setEditDataNasc","editEstado","setEditEstado","editCidade","setEditCidade","editSexo","setEditSexo","editAtivo","setEditAtivo","estadoValues","setEstadoValues","editUserId","setEditUserId","handleInputChange","evt","preventDefault","value","name","target","handleEditClick","user","id","collectCidade","changeAtivoState","validateValues","alert","validateChange","index","data","nome","email","dataNasc","cidade","estado","sexo","ativo","setEditStates","populateTable","i","removeRow","editTable","state","editData","confirmation","window","confirm","splice","setItem","stringify","location","reload","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Table.css\";\nimport DropdownEstados from \"./DropdownEstados\";\nimport DropdownCidades from \"./DropdownCidades\";\n\nfunction Table() {\n  const formData = JSON.parse(localStorage.getItem(\"Form-Data\")) || [];\n  const [usuarios] = useState(formData);\n\n  const [editNome, setEditNome] = useState(\"\");\n  const [editEmail, setEditEmail] = useState(\"\");\n  const [editDataNasc, setEditDataNasc] = useState(\"\");\n  const [editEstado, setEditEstado] = useState(\"\");\n  const [editCidade, setEditCidade] = useState(\"\");\n  const [editSexo, setEditSexo] = useState(\"\");\n  const [editAtivo, setEditAtivo] = useState(\"Inativo\");\n\n  const [estadoValues, setEstadoValues] = useState({});\n  const [editUserId, setEditUserId] = useState(null);\n\n  const handleInputChange = (evt) => {\n    evt.preventDefault();\n    const { value, name } = evt.target;\n    setEstadoValues({ ...estadoValues, [name]: value });\n    setEditEstado(evt.target.value);\n  };\n\n  const handleEditClick = (evt, user) => {\n    evt.preventDefault();\n    setEditUserId(user.id);\n  };\n\n  const collectCidade = (evt) => {\n    setEditCidade(evt.target.value);\n  };\n\n  function changeAtivoState() {\n    if (editAtivo === \"Inativo\") {\n      setEditAtivo(\"Ativo\");\n    } else {\n      setEditAtivo(\"Inativo\");\n    }\n  }\n\n  function validateValues() {\n    if (\n      editNome === \"\" ||\n      editEmail === \"\" ||\n      editDataNasc === \"\" ||\n      editEstado === \"\" ||\n      editCidade === \"\" ||\n      editSexo === \"\"\n    ) {\n      alert(\"Erro: Todos os campos devem ser preenchidos!\");\n      return false;\n    }\n\n    return true;\n  }\n\n  function validateChange(index) {\n    const data = formData[index];\n\n    if (\n      data.nome === editNome &&\n      data.email === editEmail &&\n      data.dataNasc === editDataNasc &&\n      data.cidade === editCidade &&\n      data.estado === editEstado &&\n      data.sexo === editSexo &&\n      data.ativo === editAtivo\n    ) {\n      alert(\"Nenhuma alteração realizada!\");\n      return false;\n    }\n\n    return true;\n  }\n\n  function setEditStates(user) {\n    setEditNome(user.nome);\n    setEditEmail(user.email);\n    setEditDataNasc(user.dataNasc);\n    setEditEstado(user.estado);\n    setEditCidade(user.cidade);\n    setEditSexo(user.sexo);\n    setEditAtivo(user.ativo);\n    setEstadoValues(editEstado);\n  }\n\n  function populateTable(user) {\n    return (\n      <tr key={user.id}>\n        <td>{user.nome}</td>\n        <td>{user.email}</td>\n        <td>{user.dataNasc}</td>\n        <td>{user.estado}</td>\n        <td>{user.cidade}</td>\n        <td>{user.sexo}</td>\n        <td>{user.ativo}</td>\n        <td className=\"action-buttons\">\n          <input\n            className=\"edit-button\"\n            type=\"button\"\n            id={\"edit\" + user.id}\n            value=\"Editar\"\n            onClick={(evt) => {\n              setEditStates(user);\n              handleEditClick(evt, user);\n            }}\n          ></input>\n          <input\n            className=\"delete-button\"\n            type=\"button\"\n            id={\"delete\" + user.id}\n            value=\"Deletar\"\n            onClick={(i) => removeRow(i)}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  function editTable(user) {\n    return (\n      <tr key={\"edit \" + user.id}>\n        <td>\n          <input\n            className=\"edit-name\"\n            type=\"text\"\n            required=\"required\"\n            placeholder=\"Digite um nome...\"\n            name=\"nome\"\n            value={editNome}\n            onChange={(evt) => setEditNome(evt.target.value)}\n          ></input>\n        </td>\n        <td>\n          <input\n            className=\"edit-email\"\n            type=\"text\"\n            required=\"required\"\n            placeholder=\"Digite um Email...\"\n            name=\"email\"\n            value={editEmail}\n            onChange={(evt) => {\n              setEditEmail(evt.target.value);\n            }}\n          ></input>\n        </td>\n        <td>\n          <input\n            className=\"edit-date\"\n            type=\"date\"\n            required=\"required\"\n            name=\"data\"\n            value={editDataNasc}\n            onChange={(evt) => {\n              setEditDataNasc(evt.target.value);\n            }}\n          ></input>\n        </td>\n        <td>\n          <DropdownEstados\n            onChange={handleInputChange}\n            onLoad={handleInputChange(editEstado)}\n            selected={editEstado}\n            className={\"edit-box\"}\n          />\n        </td>\n        <td>\n          <DropdownCidades\n            state={estadoValues.state}\n            onChange={collectCidade}\n            selected={editCidade}\n            className={\"edit-box\"}\n          />\n        </td>\n        <td>\n          <div className=\"edit-sexo\">\n            <div>\n              <input\n                className=\"horizontal-radio\"\n                type=\"radio\"\n                id=\"masc\"\n                name=\"sexo\"\n                value=\"Masculino\"\n                checked={editSexo === \"Masculino\"}\n                onChange={(evt) => {\n                  setEditSexo(evt.target.value);\n                }}\n              />\n              <label>Masc.</label>\n            </div>\n\n            <div>\n              <input\n                className=\"horizontal-radio\"\n                type=\"radio\"\n                id=\"fem\"\n                name=\"sexo\"\n                value=\"Feminino\"\n                checked={editSexo === \"Feminino\"}\n                onChange={(evt) => {\n                  setEditSexo(evt.target.value);\n                }}\n              />\n              <label>Femi.</label>\n            </div>\n          </div>\n        </td>\n        <td>\n          <input\n            className=\"horizontal-checkbox\"\n            type=\"checkbox\"\n            id=\"active\"\n            checked={editAtivo === \"Ativo\"}\n            onChange={changeAtivoState}\n          />\n        </td>\n        <td className=\"action-buttons\">\n          <input\n            className=\"confirm-button\"\n            type=\"button\"\n            id={\"confirm\" + user.id}\n            value=\"Confirmar\"\n            onClick={() => {\n              editData();\n            }}\n          ></input>\n          <input\n            className=\"cancel-button\"\n            type=\"button\"\n            id={\"cancel\" + user.id}\n            value=\"Cancelar\"\n            onClick={() => {\n              setEditUserId(\"null\");\n            }}\n          />\n        </td>\n      </tr>\n    );\n  }\n\n  function editData() {\n    var index = editUserId - 1;\n\n    if (validateValues() & validateChange(index)) {\n      const confirmation = window.confirm(\n        \"Você tem certeza que deseja aplicar estas alterações ao usuário?\"\n      );\n\n      if (confirmation) {\n        formData[index] = {\n          id: editUserId,\n          nome: editNome,\n          email: editEmail,\n          dataNasc: editDataNasc,\n          estado: editEstado,\n          cidade: editCidade,\n          sexo: editSexo,\n          ativo: editAtivo,\n        };\n        formData.splice(index, 1, formData[index]);\n        localStorage.setItem(\"Form-Data\", JSON.stringify(formData));\n        window.location.reload(false);\n      }\n    }\n    setEditUserId(\"null\");\n  }\n\n  function removeRow(index) {\n    const formData = JSON.parse(localStorage.getItem(\"Form-Data\")) || [];\n\n    const confirmation = window.confirm(\n      \"Você tem certeza que deseja excluir este usuário?\"\n    );\n\n    if (confirmation) {\n      formData.splice(index, 1);\n      localStorage.setItem(\"Form-Data\", JSON.stringify(formData));\n      window.location.reload();\n    } else {\n      return false;\n    }\n  }\n\n  return (\n    <div className=\"div-table\">\n      <h1>Tabela em React</h1>\n\n      <form>\n        <table className=\"table-container\" id=\"table-exercicio\">\n          <thead>\n            <tr>\n              <th>Nome</th>\n              <th>Email</th>\n              <th>Data de Nasc.</th>\n              <th>Estado</th>\n              <th>Cidade</th>\n              <th>Sexo</th>\n              <th>Ativo</th>\n              <th>Ações</th>\n            </tr>\n          </thead>\n          <tbody id=\"table-body\">\n            {usuarios.map((user, i) => (\n              <>\n                {editUserId === user.id\n                  ? editTable(user)\n                  : populateTable(user, i)}\n              </>\n            ))}\n          </tbody>\n        </table>\n      </form>\n    </div>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}